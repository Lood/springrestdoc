buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
        asciiDoctorPluginVersion = '1.5.3'
        asciiDoctorPdf = '1.5.0-alpha.11'
        epubVersion = '1.5.0-alpha.6'
    }
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciiDoctorPluginVersion}")
        classpath("org.asciidoctor:asciidoctorj-epub3:${epubVersion}")
        classpath("org.asciidoctor:asciidoctorj-pdf:${asciiDoctorPdf}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'

version = '0.0.1'
group = 'ua.in.smartjava.spring-rest-docs'

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    dependsOn test
//    backends = ['html5', 'pdf', 'epub3', 'docbook']
// There is issue with epub3 in org.asciidoctor:asciidoctorj-epub3-1.5.0-alpha.6
// It worked correctly with ascidoc 1.1
//    backends = ['html5', 'pdf', 'docbook']
    backends = ['html5']
    options doctype: 'book'

    attributes = [
            'source-highlighter': 'highlightjs',
            'imagesdir'         : './images',
            'toc'               : 'left',
            'toclevels'         : 3,
            'numbered'          : '',
            'icons'             : 'font',
            'setanchors'        : '',
            'idprefix'          : '',
            'idseparator'       : '-',
            'docinfo1'          : '',
            'safe-mode-unsafe'  : '',
            'allow-uri-read'    : '',
            'snippets'          : snippetsDir,
            linkattrs           : true,
            encoding            : 'utf-8'
    ]

    inputs.dir snippetsDir
    outputDir "build/asciidoc"
    sourceDir 'src/docs/asciidoc'
    sources {
//        include 'index.adoc'
        include 'index.adoc', 'etc/internal.adoc'
    }
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        include '**/index.html'
        include '**/images/*'
        into 'static/docs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'org.springframework.restdocs:spring-restdocs-core:1.2.0.RELEASE'
    compile 'com.h2database:h2:1.4.194'
    compile('org.projectlombok:lombok')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:1.2.0.RELEASE'
    testCompile ('org.springframework.restdocs:spring-restdocs-mockmvc:1.2.0.RELEASE')
    testCompile('com.jayway.jsonpath:json-path')
}

task publish(type: GradleBuild) {
//    dependsOn asciidoctor
    buildFile = file('publish.gradle')
    tasks = ['publishGhPages']
}